---
# Copyright 2015, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# General Environment Settings
# NB the vip addresses aren't used, we specify per service
external_lb_vip_address: 127.0.0.1
internal_lb_vip_address: 127.0.0.1
debug: true

# LXC Settings
lxc_net_address: 10.100.100.1
lxc_net_netmask: 255.255.255.0
lxc_net_dhcp_range: 10.100.100.2,10.100.100.99
lxc_net_bridge: lxcbr0
lxc_kernel_options:
  - { key: 'fs.inotify.max_user_instances', value: 1024 }

# Galera Settings
galera_root_password: secrete
galera_root_user: root
galera_innodb_buffer_pool_size: 512M
galera_innodb_log_buffer_size: 32M
galera_wsrep_node_name: "{{ inventory_hostname }}"
galera_wsrep_provider_options:
  - { option: "gcache.size", value: "32M" }
galera_server_id: "{{ inventory_hostname | string_2_int }}"

# RabbitMQ Settings
rabbitmq_cookie_token: secrete
rabbitmq_servers: "{{ hostvars[groups['rabbitmq_all'][0]]['ansible_ssh_host'] }}"
rabbitmq_use_ssl: true
rabbitmq_port: 5671

# Memcache Settings
memcached_listen: "{{ hostvars[groups['memcached_all'][0]]['ansible_ssh_host'] }}"
memcached_servers: "{{ hostvars[groups['memcached_all'][0]]['ansible_ssh_host'] }}"
memcached_encryption_key: "secrete"

# Keystone Settings
keystone_ssl: True
keystone_admin_user_name: admin
keystone_admin_tenant_name: admin
keystone_auth_admin_password: "SuperSecretePassword"
keystone_service_adminuri_insecure: false
keystone_service_internaluri_insecure: false
keystone_service_publicuri: "http://{{ hostvars[groups['keystone_all'][0]]['ansible_ssh_host'] }}:5000"
keystone_service_publicurl: "{{ keystone_service_publicuri }}/v3"
keystone_service_internaluri: "http://{{ hostvars[groups['keystone_all'][0]]['ansible_ssh_host'] }}:5000"
keystone_service_internalurl: "{{ keystone_service_internaluri }}/v3"
keystone_service_adminuri: "http://{{ hostvars[groups['keystone_all'][0]]['ansible_ssh_host'] }}:35357"
keystone_service_adminurl: "{{ keystone_service_adminuri }}/v3"
keystone_service_password: "secrete"
keystone_rabbitmq_password: "secrete"
keystone_rabbitmq_port: 5671
keystone_rabbitmq_servers: "{{ hostvars[groups['rabbitmq_all'][0]]['ansible_ssh_host'] }}"
keystone_rabbitmq_use_ssl: true
keystone_rabbitmq_userid: keystone
keystone_rabbitmq_vhost: /keystone
keystone_galera_database: keystone
keystone_galera_address: "{{ hostvars[groups['galera_all'][0]]['ansible_ssh_host'] }}"
keystone_container_mysql_password: "SuperSecrete"
keystone_venv_tag: "testing"
keystone_developer_mode: true
keystone_git_install_branch: master
keystone_requirements_git_install_branch: master
keystone_service_region: RegionOne

# Glance specific settings
glance_service_publicuri: "http://{{ hostvars[groups['glance_all'][0]]['ansible_ssh_host'] }}:9292"
glance_service_publicurl: "{{ glance_service_publicuri }}"
glance_service_internaluri: "http://{{ hostvars[groups['glance_all'][0]]['ansible_ssh_host'] }}:9292"
glance_service_internalurl: "{{ glance_service_internaluri }}"
glance_service_adminuri: "http://{{ hostvars[groups['glance_all'][0]]['ansible_ssh_host'] }}:9292"
glance_service_adminurl: "{{ glance_service_adminuri }}"
glance_container_mysql_password: "SuperSecrete"
glance_developer_mode: true
glance_galera_address: "{{ hostvars[groups['galera_all'][0]]['ansible_ssh_host'] }}"
glance_galera_database: glance
glance_git_install_branch: master
glance_profiler_hmac_key: "secrete"
glance_rabbitmq_password: "secrete"
glance_rabbitmq_userid: glance
glance_rabbitmq_vhost: /glance
glance_requirements_git_install_branch: master
glance_service_password: "secrete"
glance_venv_tag: "testing"
glance_host: "{{ hostvars[groups['glance_all'][0]]['ansible_ssh_host'] }}"
glance_service_port: 9292

# Nova specific settings
nova_api_container_mysql_password: "SuperSecrete"
nova_api_galera_address: "{{ hostvars[groups['galera_all'][0]]['ansible_ssh_host'] }}"
nova_api_galera_database: nova_api
nova_api_galera_user: nova_api
nova_container_mysql_password: "SuperSecrete"
nova_developer_mode: true
nova_galera_address: "{{ hostvars[groups['galera_all'][0]]['ansible_ssh_host'] }}"
nova_galera_database: nova
nova_git_install_branch: master
nova_keystone_auth_plugin: password
nova_management_address: "{{ ansible_ssh_host }}"
nova_metadata_port: 8775
nova_metadata_host: "{{ hostvars[groups['nova_api_metadata'][0]]['ansible_ssh_host'] }}"
nova_metadata_proxy_secret: "secrete"
nova_novncproxy_vncserver_listen: localhost
nova_novncproxy_vncserver_proxyclient_address: localhost
nova_rabbitmq_password: "secrete"
nova_rabbitmq_userid: nova
nova_rabbitmq_vhost: /nova
nova_requirements_git_install_branch: master
nova_program_name: nova-api-os-compute
nova_service_adminuri: "http://{{ hostvars[groups['nova_api_os_compute'][0]]['ansible_ssh_host'] }}:8774"
nova_service_adminurl: "{{ nova_service_adminuri }}/v2.1/%(tenant_id)s"
nova_service_publicuri: "http://{{ hostvars[groups['nova_api_os_compute'][0]]['ansible_ssh_host'] }}:8774"
nova_service_publicurl: "{{ nova_service_publicuri }}/v2.1/%(tenant_id)s"
nova_service_internaluri: "http://{{ hostvars[groups['nova_api_os_compute'][0]]['ansible_ssh_host'] }}:8774"
nova_service_internalurl: "{{ nova_service_internaluri }}/v2.1/%(tenant_id)s"
nova_spice_html5proxy_base_uri: "http://{{ hostvars[groups['nova_console'][0]]['ansible_ssh_host'] }}:6082"
nova_spice_html5proxy_base_url: "{{ nova_spice_html5proxy_base_uri }}/spice_auto.html"
nova_service_password: "secrete"
nova_service_project_domain_id: default
nova_service_project_name: service
nova_service_region: RegionOne
nova_service_user_domain_id: default
nova_service_user_name: nova
nova_venv_bin: "/openstack/venvs/nova-{{ nova_venv_tag }}/bin"
nova_venv_tag: "testing"
nova_virt_type: qemu

# Neutron specific settings
neutron_container_mysql_password: SuperSecrete
neutron_developer_mode: true
neutron_galera_address: "{{ hostvars[groups['galera_all'][0]]['ansible_ssh_host'] }}"
neutron_galera_database: neutron
neutron_git_install_branch: master
neutron_ha_vrrp_auth_password: secrete
neutron_management_address: "{{ hostvars[groups['neutron_agent'][0]]['ansible_ssh_host'] }}"
neutron_rabbitmq_password: secrete
neutron_rabbitmq_userid: neutron
neutron_rabbitmq_vhost: /neutron
neutron_requirements_git_install_branch: master
neutron_service_publicuri: "http://{{ hostvars[groups['neutron_agent'][0]]['ansible_ssh_host'] }}:9696"
neutron_service_publicurl: "{{ neutron_service_publicuri }}"
neutron_service_adminuri: "http://{{ hostvars[groups['neutron_agent'][0]]['ansible_ssh_host'] }}:9696"
neutron_service_adminurl: "{{ neutron_service_adminuri }}"
neutron_service_internaluri: "http://{{ hostvars[groups['neutron_agent'][0]]['ansible_ssh_host'] }}:9696"
neutron_serivce_internalurl: "{{ neutron_service_internaluri }}"
neutron_service_password: "secrete"
neutron_service_project_name: service
neutron_service_region: RegionOne
neutron_service_user_name: neutron
neutron_venv_tag: testing

# Cinder specific settings
cinder_backends_rbd_inuse: false
cinder_ceph_client: cinder

# Swift specific settings
swift_storage_address: "{{ ansible_ssh_host }}"
swift_container_mysql_password: "SuperSecrete"
swift_dispersion_password: "secrete"
swift_hash_path_prefix: "secrete_prefx"
swift_hash_path_suffix: "secrete_suffix"
swift_service_password: "secrete"
swift_developer_mode: true
swift_git_install_branch: master
swift_venv_tag: untagged
swift_venv_bin: "/openstack/venvs/swift-{{ swift_venv_tag }}/bin"
swift_service_publicuri: "http://{{ hostvars[groups['swift_proxy'][0]]['ansible_ssh_host'] }}:8080"
swift_service_adminuri: "http://{{ hostvars[groups['swift_proxy'][0]]['ansible_ssh_host'] }}:8080"
swift_service_internaluri: "http://{{ hostvars[groups['swift_proxy'][0]]['ansible_ssh_host'] }}:8080"
swift_replication_address: "{{ replication_address }}"
swift:
  storage_network: eth1
  repl_network: eth3
  part_power: 8
  drives:
    - name: swift1
    - name: swift2
  mount_point: /openstack
  storage_policies:
    - policy:
        name: gold
        index: 0
        repl_number: 3
        default: True
swift_proxy_server_conf_overrides:
  "filter:keystoneauth":
    reseller_prefix: "AUTH, SERVICE"
    "SERVICE_service_roles": "test5"

# Tempest specific settings
tempest_developer_mode: True
tempest_git_install_branch: master
tempest_venv_tag: "{{ tempest_git_install_branch }}"
# tempest_venv_bin is the same as the default in os_tempest role, but we set
# it again here so we can refer to it in test-nova-functional.yml
tempest_venv_bin: "/opt/tempest_{{ tempest_venv_tag }}/bin"
tempest_log_dir: "/var/log/"
tempest_main_group: glance_all
tempest_service_available_aodh: False
tempest_service_available_ceilometer: False
tempest_service_available_cinder: False
tempest_service_available_glance: True
tempest_service_available_heat: False
tempest_service_available_horizon: False
tempest_service_available_neutron: True
tempest_service_available_nova: True
tempest_service_available_swift: False

# openrc settings
openrc_os_password: "{{ keystone_auth_admin_password }}"
openrc_os_domain_name: "Default"
openrc_os_auth_url: "http://{{ hostvars[groups['keystone_all'][0]]['ansible_ssh_host'] }}:5000/v3"
